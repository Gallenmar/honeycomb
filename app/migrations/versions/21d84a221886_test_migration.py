"""test migration

Revision ID: 21d84a221886
Revises: 7e36bc59a4a5
Create Date: 2025-04-26 11:57:04.337307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '21d84a221886'
down_revision: Union[str, None] = '7e36bc59a4a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appliances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('furnished', sa.Boolean(), nullable=True),
    sa.Column('washing_machine', sa.Boolean(), nullable=True),
    sa.Column('refrigerator', sa.Boolean(), nullable=True),
    sa.Column('stove_type', sa.String(), nullable=True),
    sa.Column('water_heater_type', sa.String(), nullable=True),
    sa.Column('heating_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appliances_id'), 'appliances', ['id'], unique=False)
    op.create_table('listing_languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('languages', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_listing_languages_id'), 'listing_languages', ['id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('nearby_infrastructure',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grocery_distance_min', sa.Integer(), nullable=True),
    sa.Column('transport_distance_min', sa.Integer(), nullable=True),
    sa.Column('time_to_old_town_min', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nearby_infrastructure_id'), 'nearby_infrastructure', ['id'], unique=False)
    op.create_table('outdoor_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courtyard', sa.Boolean(), nullable=True),
    sa.Column('bbq_area', sa.Boolean(), nullable=True),
    sa.Column('parking_available', sa.Boolean(), nullable=True),
    sa.Column('parking_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outdoor_features_id'), 'outdoor_features', ['id'], unique=False)
    op.create_table('property_characteristics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('size_m2', sa.Float(), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('high_ceilings', sa.Boolean(), nullable=True),
    sa.Column('flooring_type', sa.String(), nullable=True),
    sa.Column('renovated', sa.Boolean(), nullable=True),
    sa.Column('building_type', sa.String(), nullable=True),
    sa.Column('courtyard_location', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_characteristics_id'), 'property_characteristics', ['id'], unique=False)
    op.create_table('rent_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monthly_rent_eur', sa.Float(), nullable=True),
    sa.Column('management_fee_winter_eur', sa.Float(), nullable=True),
    sa.Column('management_fee_summer_eur', sa.Float(), nullable=True),
    sa.Column('utilities_included', sa.Boolean(), nullable=True),
    sa.Column('utility_details', sa.String(), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rent_details_id'), 'rent_details', ['id'], unique=False)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('kitchen', sa.Boolean(), nullable=True),
    sa.Column('living_room', sa.Boolean(), nullable=True),
    sa.Column('bathroom_description', sa.String(), nullable=True),
    sa.Column('utility_room', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=False)
    op.create_index(op.f('ix_todos_title'), 'todos', ['title'], unique=False)
    op.create_table('housing_listings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('listing_type', sa.String(), nullable=True),
    sa.Column('property_type', sa.String(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('rent_details_id', sa.Integer(), nullable=True),
    sa.Column('property_characteristics_id', sa.Integer(), nullable=True),
    sa.Column('rooms_id', sa.Integer(), nullable=True),
    sa.Column('appliances_id', sa.Integer(), nullable=True),
    sa.Column('outdoor_features_id', sa.Integer(), nullable=True),
    sa.Column('nearby_infrastructure_id', sa.Integer(), nullable=True),
    sa.Column('listing_languages_id', sa.Integer(), nullable=True),
    sa.Column('source_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['appliances_id'], ['appliances.id'], ),
    sa.ForeignKeyConstraint(['listing_languages_id'], ['listing_languages.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['nearby_infrastructure_id'], ['nearby_infrastructure.id'], ),
    sa.ForeignKeyConstraint(['outdoor_features_id'], ['outdoor_features.id'], ),
    sa.ForeignKeyConstraint(['property_characteristics_id'], ['property_characteristics.id'], ),
    sa.ForeignKeyConstraint(['rent_details_id'], ['rent_details.id'], ),
    sa.ForeignKeyConstraint(['rooms_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_housing_listings_id'), 'housing_listings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_housing_listings_id'), table_name='housing_listings')
    op.drop_table('housing_listings')
    op.drop_index(op.f('ix_todos_title'), table_name='todos')
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.drop_table('todos')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_rent_details_id'), table_name='rent_details')
    op.drop_table('rent_details')
    op.drop_index(op.f('ix_property_characteristics_id'), table_name='property_characteristics')
    op.drop_table('property_characteristics')
    op.drop_index(op.f('ix_outdoor_features_id'), table_name='outdoor_features')
    op.drop_table('outdoor_features')
    op.drop_index(op.f('ix_nearby_infrastructure_id'), table_name='nearby_infrastructure')
    op.drop_table('nearby_infrastructure')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_listing_languages_id'), table_name='listing_languages')
    op.drop_table('listing_languages')
    op.drop_index(op.f('ix_appliances_id'), table_name='appliances')
    op.drop_table('appliances')
    # ### end Alembic commands ###
